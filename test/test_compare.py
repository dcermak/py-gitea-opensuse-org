# coding: utf-8

"""
    Gitea API

    This documentation describes the Gitea API.

    The version of the OpenAPI document: 1.22.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_gitea_opensuse_org.models.compare import Compare


class TestCompare(unittest.TestCase):
    """Compare unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Compare:
        """Test Compare
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `Compare`
        """
        model = Compare()
        if include_optional:
            return Compare(
                commits = [
                    py_gitea_opensuse_org.models.commit_contains_information_generated_from_a_git_commit/.Commit contains information generated from a Git commit.(
                        author = py_gitea_opensuse_org.models.user.User(
                            active = True, 
                            avatar_url = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            email = '', 
                            followers_count = 56, 
                            following_count = 56, 
                            full_name = '', 
                            html_url = '', 
                            id = 56, 
                            is_admin = True, 
                            language = '', 
                            last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            location = '', 
                            login = '', 
                            login_name = 'empty', 
                            prohibit_login = True, 
                            restricted = True, 
                            source_id = 56, 
                            starred_repos_count = 56, 
                            visibility = '', 
                            website = '', ), 
                        commit = py_gitea_opensuse_org.models.repo_commit_contains_information_of_a_commit_in_the_context_of_a_repository/.RepoCommit contains information of a commit in the context of a repository.(
                            committer = py_gitea_opensuse_org.models.commit_user_contains_information_of_a_user_in_the_context_of_a_commit/.CommitUser contains information of a user in the context of a commit.(
                                date = '', 
                                email = '', 
                                name = '', ), 
                            message = '', 
                            tree = py_gitea_opensuse_org.models.commit_meta_contains_meta_information_of_a_commit_in_terms_of_api/.CommitMeta contains meta information of a commit in terms of API.(
                                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                sha = '', 
                                url = '', ), 
                            url = '', 
                            verification = py_gitea_opensuse_org.models.payload_commit_verification.PayloadCommitVerification(
                                payload = '', 
                                reason = '', 
                                signature = '', 
                                signer = py_gitea_opensuse_org.models.payload_user.PayloadUser(
                                    email = '', 
                                    name = '', 
                                    username = '', ), 
                                verified = True, ), ), 
                        committer = py_gitea_opensuse_org.models.user.User(
                            active = True, 
                            avatar_url = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            email = '', 
                            followers_count = 56, 
                            following_count = 56, 
                            full_name = '', 
                            html_url = '', 
                            id = 56, 
                            is_admin = True, 
                            language = '', 
                            last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            location = '', 
                            login = '', 
                            login_name = 'empty', 
                            prohibit_login = True, 
                            restricted = True, 
                            source_id = 56, 
                            starred_repos_count = 56, 
                            visibility = '', 
                            website = '', ), 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        files = [
                            py_gitea_opensuse_org.models.commit_affected_files.CommitAffectedFiles(
                                filename = '', 
                                status = '', )
                            ], 
                        html_url = '', 
                        parents = [
                            py_gitea_opensuse_org.models.commit_meta_contains_meta_information_of_a_commit_in_terms_of_api/.CommitMeta contains meta information of a commit in terms of API.(
                                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                sha = '', 
                                url = '', )
                            ], 
                        sha = '', 
                        stats = py_gitea_opensuse_org.models.commit_stats.CommitStats(
                            additions = 56, 
                            deletions = 56, 
                            total = 56, ), 
                        url = '', )
                    ],
                total_commits = 56
            )
        else:
            return Compare(
        )
        """

    def testCompare(self):
        """Test Compare"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
