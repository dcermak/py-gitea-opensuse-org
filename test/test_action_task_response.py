# coding: utf-8

"""
    Gitea API

    This documentation describes the Gitea API.

    The version of the OpenAPI document: 1.24.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_gitea_opensuse_org.models.action_task_response import ActionTaskResponse

class TestActionTaskResponse(unittest.TestCase):
    """ActionTaskResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionTaskResponse:
        """Test ActionTaskResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionTaskResponse`
        """
        model = ActionTaskResponse()
        if include_optional:
            return ActionTaskResponse(
                total_count = 56,
                workflow_runs = [
                    py_gitea_opensuse_org.models.action_task.ActionTask(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        display_title = '', 
                        event = '', 
                        head_branch = '', 
                        head_sha = '', 
                        id = 56, 
                        name = '', 
                        run_number = 56, 
                        run_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        url = '', 
                        workflow_id = '', )
                    ]
            )
        else:
            return ActionTaskResponse(
        )
        """

    def testActionTaskResponse(self):
        """Test ActionTaskResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
